version: '3.8'

services:
  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.12.0
    container_name: hecores-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/hecores_password
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=512m
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - hecores-network
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p hecores_password 'RETURN 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # HeCoReS-DR Application
  hecores-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hecores-app
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=hecores_password
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data
      - ./experiments:/app/experiments
      - ./src:/app/src
      - ./logs:/app/logs
    networks:
      - hecores-network
    command: python -c "print('HeCoReS-DR is ready. Run your experiments.')"

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  hecores-network:
    driver: bridge
